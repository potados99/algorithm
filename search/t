================================================================
Before:
Key: ?(-0b1), Skipped bit: 0, Left: ?(-0b1), Right: ?(-0b1).

Empty!
================================================================


================================================================
Before:
Key: B(0b10), Skipped bit: 1, Left: B(0b10), Right: B(0b10).

New key is 9

Seeking for a closest node.
Closest node is Key: B(0b10), Skipped bit: 1, Left: B(0b10), Right: B(0b10).

Skipped bit for a new node is 3

Seeking for a proper parent and child.
Parent: Key: B(0b10), Skipped bit: 1, Left: B(0b10), Right: B(0b10).
Child: Key: B(0b10), Skipped bit: 1, Left: B(0b10), Right: B(0b10).

Adding Key: I(0b1001), Skipped bit: 3, Left: I(0b1001), Right: I(0b1001).
!! Root will be changed !!

After:
Key: I(0b1001), Skipped bit: 3, Left: B(0b10), Right: I(0b1001).
Key: B(0b10), Skipped bit: 1, Left: B(0b10), Right: B(0b10).
================================================================


================================================================
Before:
Key: I(0b1001), Skipped bit: 3, Left: B(0b10), Right: I(0b1001).
Key: B(0b10), Skipped bit: 1, Left: B(0b10), Right: B(0b10).

New key is 7

Seeking for a closest node.
Closest node is Key: B(0b10), Skipped bit: 1, Left: B(0b10), Right: B(0b10).

Skipped bit for a new node is 2

Seeking for a proper parent and child.
Parent: Key: I(0b1001), Skipped bit: 3, Left: B(0b10), Right: I(0b1001).
Child: Key: B(0b10), Skipped bit: 1, Left: B(0b10), Right: B(0b10).

Adding Key: G(0b111), Skipped bit: 2, Left: G(0b111), Right: G(0b111).

After:
Key: I(0b1001), Skipped bit: 3, Left: G(0b111), Right: I(0b1001).
Key: G(0b111), Skipped bit: 2, Left: B(0b10), Right: G(0b111).
Key: B(0b10), Skipped bit: 1, Left: B(0b10), Right: B(0b10).
================================================================


================================================================
Before:
Key: I(0b1001), Skipped bit: 3, Left: G(0b111), Right: I(0b1001).
Key: G(0b111), Skipped bit: 2, Left: B(0b10), Right: G(0b111).
Key: B(0b10), Skipped bit: 1, Left: B(0b10), Right: B(0b10).

New key is 3

Seeking for a closest node.
Closest node is Key: B(0b10), Skipped bit: 1, Left: B(0b10), Right: B(0b10).

Skipped bit for a new node is 0

Seeking for a proper parent and child.
Parent: Key: B(0b10), Skipped bit: 1, Left: B(0b10), Right: B(0b10).
Child: Key: B(0b10), Skipped bit: 1, Left: B(0b10), Right: B(0b10).

Adding Key: C(0b11), Skipped bit: 0, Left: C(0b11), Right: C(0b11).

After:
Key: I(0b1001), Skipped bit: 3, Left: G(0b111), Right: I(0b1001).
Key: G(0b111), Skipped bit: 2, Left: B(0b10), Right: G(0b111).
Key: B(0b10), Skipped bit: 1, Left: B(0b10), Right: C(0b11).
Key: C(0b11), Skipped bit: 0, Left: B(0b10), Right: C(0b11).
================================================================


================================================================
Before:
Key: I(0b1001), Skipped bit: 3, Left: G(0b111), Right: I(0b1001).
Key: G(0b111), Skipped bit: 2, Left: B(0b10), Right: G(0b111).
Key: B(0b10), Skipped bit: 1, Left: B(0b10), Right: C(0b11).
Key: C(0b11), Skipped bit: 0, Left: B(0b10), Right: C(0b11).

New key is 15

Seeking for a closest node.
Closest node is Key: I(0b1001), Skipped bit: 3, Left: G(0b111), Right: I(0b1001).

Skipped bit for a new node is 2

Seeking for a proper parent and child.
Parent: Key: I(0b1001), Skipped bit: 3, Left: G(0b111), Right: I(0b1001).
Child: Key: I(0b1001), Skipped bit: 3, Left: G(0b111), Right: I(0b1001).

Adding Key: O(0b1111), Skipped bit: 2, Left: O(0b1111), Right: O(0b1111).

After:
Key: I(0b1001), Skipped bit: 3, Left: G(0b111), Right: O(0b1111).
Key: G(0b111), Skipped bit: 2, Left: B(0b10), Right: G(0b111).
Key: B(0b10), Skipped bit: 1, Left: B(0b10), Right: C(0b11).
Key: C(0b11), Skipped bit: 0, Left: B(0b10), Right: C(0b11).
Key: O(0b1111), Skipped bit: 2, Left: I(0b1001), Right: O(0b1111).
================================================================


================================================================
Before:
Key: I(0b1001), Skipped bit: 3, Left: G(0b111), Right: O(0b1111).
Key: G(0b111), Skipped bit: 2, Left: B(0b10), Right: G(0b111).
Key: B(0b10), Skipped bit: 1, Left: B(0b10), Right: C(0b11).
Key: C(0b11), Skipped bit: 0, Left: B(0b10), Right: C(0b11).
Key: O(0b1111), Skipped bit: 2, Left: I(0b1001), Right: O(0b1111).

New key is 13

Seeking for a closest node.
Closest node is Key: O(0b1111), Skipped bit: 2, Left: I(0b1001), Right: O(0b1111).

Skipped bit for a new node is 1

Seeking for a proper parent and child.
Parent: Key: O(0b1111), Skipped bit: 2, Left: I(0b1001), Right: O(0b1111).
Child: Key: O(0b1111), Skipped bit: 2, Left: I(0b1001), Right: O(0b1111).

Adding Key: M(0b1101), Skipped bit: 1, Left: M(0b1101), Right: M(0b1101).

After:
Key: I(0b1001), Skipped bit: 3, Left: G(0b111), Right: O(0b1111).
Key: G(0b111), Skipped bit: 2, Left: B(0b10), Right: G(0b111).
Key: B(0b10), Skipped bit: 1, Left: B(0b10), Right: C(0b11).
Key: C(0b11), Skipped bit: 0, Left: B(0b10), Right: C(0b11).
Key: O(0b1111), Skipped bit: 2, Left: I(0b1001), Right: M(0b1101).
Key: M(0b1101), Skipped bit: 1, Left: M(0b1101), Right: O(0b1111).
================================================================


================================================================
Before:
Key: I(0b1001), Skipped bit: 3, Left: G(0b111), Right: O(0b1111).
Key: G(0b111), Skipped bit: 2, Left: B(0b10), Right: G(0b111).
Key: B(0b10), Skipped bit: 1, Left: B(0b10), Right: C(0b11).
Key: C(0b11), Skipped bit: 0, Left: B(0b10), Right: C(0b11).
Key: O(0b1111), Skipped bit: 2, Left: I(0b1001), Right: M(0b1101).
Key: M(0b1101), Skipped bit: 1, Left: M(0b1101), Right: O(0b1111).

New key is 16

Seeking for a closest node.
Closest node is Key: B(0b10), Skipped bit: 1, Left: B(0b10), Right: C(0b11).

Skipped bit for a new node is 4

Seeking for a proper parent and child.
Parent: Key: I(0b1001), Skipped bit: 3, Left: G(0b111), Right: O(0b1111).
Child: Key: I(0b1001), Skipped bit: 3, Left: G(0b111), Right: O(0b1111).

Adding Key: P(0b10000), Skipped bit: 4, Left: P(0b10000), Right: P(0b10000).
!! Root will be changed !!

After:
Key: P(0b10000), Skipped bit: 4, Left: I(0b1001), Right: P(0b10000).
Key: I(0b1001), Skipped bit: 3, Left: G(0b111), Right: O(0b1111).
Key: G(0b111), Skipped bit: 2, Left: B(0b10), Right: G(0b111).
Key: B(0b10), Skipped bit: 1, Left: B(0b10), Right: C(0b11).
Key: C(0b11), Skipped bit: 0, Left: B(0b10), Right: C(0b11).
Key: O(0b1111), Skipped bit: 2, Left: I(0b1001), Right: M(0b1101).
Key: M(0b1101), Skipped bit: 1, Left: M(0b1101), Right: O(0b1111).
================================================================


================================================================
Before:
Key: P(0b10000), Skipped bit: 4, Left: I(0b1001), Right: P(0b10000).
Key: I(0b1001), Skipped bit: 3, Left: G(0b111), Right: O(0b1111).
Key: G(0b111), Skipped bit: 2, Left: B(0b10), Right: G(0b111).
Key: B(0b10), Skipped bit: 1, Left: B(0b10), Right: C(0b11).
Key: C(0b11), Skipped bit: 0, Left: B(0b10), Right: C(0b11).
Key: O(0b1111), Skipped bit: 2, Left: I(0b1001), Right: M(0b1101).
Key: M(0b1101), Skipped bit: 1, Left: M(0b1101), Right: O(0b1111).

New key is 21

Seeking for a closest node.
Closest node is Key: P(0b10000), Skipped bit: 4, Left: I(0b1001), Right: P(0b10000).

Skipped bit for a new node is 2

Seeking for a proper parent and child.
Parent: Key: P(0b10000), Skipped bit: 4, Left: I(0b1001), Right: P(0b10000).
Child: Key: P(0b10000), Skipped bit: 4, Left: I(0b1001), Right: P(0b10000).

Adding Key: U(0b10101), Skipped bit: 2, Left: U(0b10101), Right: U(0b10101).

After:
Key: P(0b10000), Skipped bit: 4, Left: I(0b1001), Right: U(0b10101).
Key: I(0b1001), Skipped bit: 3, Left: G(0b111), Right: O(0b1111).
Key: G(0b111), Skipped bit: 2, Left: B(0b10), Right: G(0b111).
Key: B(0b10), Skipped bit: 1, Left: B(0b10), Right: C(0b11).
Key: C(0b11), Skipped bit: 0, Left: B(0b10), Right: C(0b11).
Key: O(0b1111), Skipped bit: 2, Left: I(0b1001), Right: M(0b1101).
Key: M(0b1101), Skipped bit: 1, Left: M(0b1101), Right: O(0b1111).
Key: U(0b10101), Skipped bit: 2, Left: P(0b10000), Right: U(0b10101).
================================================================


================================================================
Before:
Key: P(0b10000), Skipped bit: 4, Left: I(0b1001), Right: U(0b10101).
Key: I(0b1001), Skipped bit: 3, Left: G(0b111), Right: O(0b1111).
Key: G(0b111), Skipped bit: 2, Left: B(0b10), Right: G(0b111).
Key: B(0b10), Skipped bit: 1, Left: B(0b10), Right: C(0b11).
Key: C(0b11), Skipped bit: 0, Left: B(0b10), Right: C(0b11).
Key: O(0b1111), Skipped bit: 2, Left: I(0b1001), Right: M(0b1101).
Key: M(0b1101), Skipped bit: 1, Left: M(0b1101), Right: O(0b1111).
Key: U(0b10101), Skipped bit: 2, Left: P(0b10000), Right: U(0b10101).

New key is 20

Seeking for a closest node.
Closest node is Key: U(0b10101), Skipped bit: 2, Left: P(0b10000), Right: U(0b10101).

Skipped bit for a new node is 0

Seeking for a proper parent and child.
Parent: Key: U(0b10101), Skipped bit: 2, Left: P(0b10000), Right: U(0b10101).
Child: Key: U(0b10101), Skipped bit: 2, Left: P(0b10000), Right: U(0b10101).

Adding Key: T(0b10100), Skipped bit: 0, Left: T(0b10100), Right: T(0b10100).

After:
Key: P(0b10000), Skipped bit: 4, Left: I(0b1001), Right: U(0b10101).
Key: I(0b1001), Skipped bit: 3, Left: G(0b111), Right: O(0b1111).
Key: G(0b111), Skipped bit: 2, Left: B(0b10), Right: G(0b111).
Key: B(0b10), Skipped bit: 1, Left: B(0b10), Right: C(0b11).
Key: C(0b11), Skipped bit: 0, Left: B(0b10), Right: C(0b11).
Key: O(0b1111), Skipped bit: 2, Left: I(0b1001), Right: M(0b1101).
Key: M(0b1101), Skipped bit: 1, Left: M(0b1101), Right: O(0b1111).
Key: U(0b10101), Skipped bit: 2, Left: P(0b10000), Right: T(0b10100).
Key: T(0b10100), Skipped bit: 0, Left: T(0b10100), Right: U(0b10101).
================================================================


================================================================
Before:
Key: P(0b10000), Skipped bit: 4, Left: I(0b1001), Right: U(0b10101).
Key: I(0b1001), Skipped bit: 3, Left: G(0b111), Right: O(0b1111).
Key: G(0b111), Skipped bit: 2, Left: B(0b10), Right: G(0b111).
Key: B(0b10), Skipped bit: 1, Left: B(0b10), Right: C(0b11).
Key: C(0b11), Skipped bit: 0, Left: B(0b10), Right: C(0b11).
Key: O(0b1111), Skipped bit: 2, Left: I(0b1001), Right: M(0b1101).
Key: M(0b1101), Skipped bit: 1, Left: M(0b1101), Right: O(0b1111).
Key: U(0b10101), Skipped bit: 2, Left: P(0b10000), Right: T(0b10100).
Key: T(0b10100), Skipped bit: 0, Left: T(0b10100), Right: U(0b10101).

New key is 5

Seeking for a closest node.
Closest node is Key: G(0b111), Skipped bit: 2, Left: B(0b10), Right: G(0b111).

Skipped bit for a new node is 1

Seeking for a proper parent and child.
Parent: Key: G(0b111), Skipped bit: 2, Left: B(0b10), Right: G(0b111).
Child: Key: G(0b111), Skipped bit: 2, Left: B(0b10), Right: G(0b111).

Adding Key: E(0b101), Skipped bit: 1, Left: E(0b101), Right: E(0b101).

After:
Key: P(0b10000), Skipped bit: 4, Left: I(0b1001), Right: U(0b10101).
Key: I(0b1001), Skipped bit: 3, Left: G(0b111), Right: O(0b1111).
Key: G(0b111), Skipped bit: 2, Left: B(0b10), Right: E(0b101).
Key: B(0b10), Skipped bit: 1, Left: B(0b10), Right: C(0b11).
Key: C(0b11), Skipped bit: 0, Left: B(0b10), Right: C(0b11).
Key: E(0b101), Skipped bit: 1, Left: E(0b101), Right: G(0b111).
Key: O(0b1111), Skipped bit: 2, Left: I(0b1001), Right: M(0b1101).
Key: M(0b1101), Skipped bit: 1, Left: M(0b1101), Right: O(0b1111).
Key: U(0b10101), Skipped bit: 2, Left: P(0b10000), Right: T(0b10100).
Key: T(0b10100), Skipped bit: 0, Left: T(0b10100), Right: U(0b10101).
================================================================


================================================================
Before:
Key: P(0b10000), Skipped bit: 4, Left: I(0b1001), Right: U(0b10101).
Key: I(0b1001), Skipped bit: 3, Left: G(0b111), Right: O(0b1111).
Key: G(0b111), Skipped bit: 2, Left: B(0b10), Right: E(0b101).
Key: B(0b10), Skipped bit: 1, Left: B(0b10), Right: C(0b11).
Key: C(0b11), Skipped bit: 0, Left: B(0b10), Right: C(0b11).
Key: E(0b101), Skipped bit: 1, Left: E(0b101), Right: G(0b111).
Key: O(0b1111), Skipped bit: 2, Left: I(0b1001), Right: M(0b1101).
Key: M(0b1101), Skipped bit: 1, Left: M(0b1101), Right: O(0b1111).
Key: U(0b10101), Skipped bit: 2, Left: P(0b10000), Right: T(0b10100).
Key: T(0b10100), Skipped bit: 0, Left: T(0b10100), Right: U(0b10101).

New key is 18

Seeking for a closest node.
Closest node is Key: P(0b10000), Skipped bit: 4, Left: I(0b1001), Right: U(0b10101).

Skipped bit for a new node is 1

Seeking for a proper parent and child.
Parent: Key: U(0b10101), Skipped bit: 2, Left: P(0b10000), Right: T(0b10100).
Child: Key: P(0b10000), Skipped bit: 4, Left: I(0b1001), Right: U(0b10101).

Adding Key: R(0b10010), Skipped bit: 1, Left: R(0b10010), Right: R(0b10010).

After:
Key: P(0b10000), Skipped bit: 4, Left: I(0b1001), Right: U(0b10101).
Key: I(0b1001), Skipped bit: 3, Left: G(0b111), Right: O(0b1111).
Key: G(0b111), Skipped bit: 2, Left: B(0b10), Right: E(0b101).
Key: B(0b10), Skipped bit: 1, Left: B(0b10), Right: C(0b11).
Key: C(0b11), Skipped bit: 0, Left: B(0b10), Right: C(0b11).
Key: E(0b101), Skipped bit: 1, Left: E(0b101), Right: G(0b111).
Key: O(0b1111), Skipped bit: 2, Left: I(0b1001), Right: M(0b1101).
Key: M(0b1101), Skipped bit: 1, Left: M(0b1101), Right: O(0b1111).
Key: U(0b10101), Skipped bit: 2, Left: R(0b10010), Right: T(0b10100).
Key: R(0b10010), Skipped bit: 1, Left: P(0b10000), Right: R(0b10010).
Key: T(0b10100), Skipped bit: 0, Left: T(0b10100), Right: U(0b10101).
================================================================


